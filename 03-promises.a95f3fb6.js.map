{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,SAASC,iBAAiB,oBAAoB,WAC5C,MAAMC,EAAOF,SAASG,cAAc,SACfD,EAAKC,cAAc,yBAuBxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,GACFF,EAAQ,C,SAAEH,E,MAAUC,IACpBQ,EAAAhB,GAASiB,OAAOC,QACd,uBAAqBX,QAAiBC,SAGxCG,EAAO,C,SAAEJ,E,MAAUC,IACnBQ,EAAAhB,GAASiB,OAAOE,QACd,sBAAoBZ,QAAiBC,O,GAGxCA,EAAM,G,CArCbJ,EAAKD,iBAAiB,UAAU,SAAUiB,GACxCA,EAAMC,iBAEN,MAAMC,EAAeF,EAAMG,OAAOC,SAC5BC,EAAaC,SAASJ,EAAad,MAAMmB,MAAO,IAChDC,EAAOF,SAASJ,EAAaM,KAAKD,MAAO,IACzCE,EAASH,SAASJ,EAAaO,OAAOF,MAAO,IAE7CG,EAAe1B,EAAKC,cAAc,yBAEnCyB,EAAaC,aAAa,cAC7BD,EAAaE,UAAW,EA8B5B,SAAwBP,EAAYG,EAAMC,GACxC,MAAMI,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,IAAK,CAChC,MAEMC,EAAU7B,EAAc4B,EAFhBT,GAAcS,EAAI,GAAKN,GAGlCQ,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,MACjB6B,QAAQC,IAAI,uBAAqB/B,QAAiBC,MAAU,IAE7D+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClB6B,QAAQC,IAAI,sBAAoB/B,QAAeC,MAAU,IAG7DyB,EAASO,KAAKL,E,CAGhB,OAAO1B,QAAQgC,IAAIR,E,CA7CjBS,CAAejB,EAAYG,EAAMC,GAAQc,SAAQ,KAC/Cb,EAAaE,UAAW,EAExB5B,EAAKwC,OAAO,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const form = document.querySelector('.form');\n  const createButton = form.querySelector('button[type=\"submit\"]');\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const formElements = event.target.elements;\n    const firstDelay = parseInt(formElements.delay.value, 10);\n    const step = parseInt(formElements.step.value, 10);\n    const amount = parseInt(formElements.amount.value, 10);\n\n    const createButton = form.querySelector('button[type=\"submit\"]');\n\n    if (!createButton.hasAttribute('disabled')) {\n      createButton.disabled = true;\n\n      createPromises(firstDelay, step, amount).finally(() => {\n        createButton.disabled = false;\n\n        form.reset();\n      });\n    }\n  });\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        } else {\n          reject({ position, delay });\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        }\n      }, delay);\n    });\n  }\n\n  function createPromises(firstDelay, step, amount) {\n    const promises = [];\n\n    for (let i = 1; i <= amount; i++) {\n      const delay = firstDelay + (i - 1) * step;\n\n      const promise = createPromise(i, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      promises.push(promise);\n    }\n\n    return Promise.all(promises);\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","document","addEventListener","form","querySelector","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","event","preventDefault","formElements","target","elements","firstDelay","parseInt","value","step","amount","createButton","hasAttribute","disabled","promises","i","promise","then","console","log","catch","push","all","createPromises","finally","reset"],"version":3,"file":"03-promises.a95f3fb6.js.map"}