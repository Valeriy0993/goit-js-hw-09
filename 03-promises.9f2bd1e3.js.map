{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEAC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAOF,SAASG,cAAc,SACfD,EAAKC,cAAc,yBAuBxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UACpBQ,EAAAhB,GAASiB,OAAOC,QACd,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,SAGhDG,EAAO,CAAEJ,WAAUC,UACnBQ,EAAAhB,GAASiB,OAAOG,QACd,sBAAuCD,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,GAGhDA,E,IArCPJ,EAAKD,iBAAiB,UAAU,SAAUkB,GACxCA,EAAMC,iBAEN,IAAMC,EAAeF,EAAMG,OAAOC,SAC5BC,EAAaC,SAASJ,EAAaf,MAAMoB,MAAO,IAChDC,EAAOF,SAASJ,EAAaM,KAAKD,MAAO,IACzCE,EAASH,SAASJ,EAAaO,OAAOF,MAAO,IAE7CG,EAAe3B,EAAKC,cAAc,yBAEnC0B,EAAaC,aAAa,cAC7BD,EAAaE,UAAW,EA8B5B,SAAwBP,EAAYG,EAAMC,GAGxC,IAFA,IAAMI,EAAW,GAERC,EAAI,EAAGA,GAAKL,EAAQK,IAAK,CAChC,IAEMC,EAAU9B,EAAc6B,EAFhBT,GAAcS,EAAI,GAAKN,GAGlCQ,MAAK,SAAAC,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MACjB+B,QAAQC,IAAI,uBAAwCrB,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE3DiC,OAAM,SAAAH,G,IAAG/B,EAAQ+B,EAAR/B,SAAUC,EAAK8B,EAAL9B,MAClB+B,QAAQC,IAAI,sBAAqCrB,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAG3D0B,EAASQ,KAAKN,E,CAGhB,OAAO3B,QAAQkC,IAAIT,E,CA7CjBU,CAAelB,EAAYG,EAAMC,GAAQe,SAAQ,WAC/Cd,EAAaE,UAAW,EAExB7B,EAAK0C,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const form = document.querySelector('.form');\n  const createButton = form.querySelector('button[type=\"submit\"]');\n\n  form.addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const formElements = event.target.elements;\n    const firstDelay = parseInt(formElements.delay.value, 10);\n    const step = parseInt(formElements.step.value, 10);\n    const amount = parseInt(formElements.amount.value, 10);\n\n    const createButton = form.querySelector('button[type=\"submit\"]');\n\n    if (!createButton.hasAttribute('disabled')) {\n      createButton.disabled = true;\n\n      createPromises(firstDelay, step, amount).finally(() => {\n        createButton.disabled = false;\n\n        form.reset();\n      });\n    }\n  });\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        } else {\n          reject({ position, delay });\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        }\n      }, delay);\n    });\n  }\n\n  function createPromises(firstDelay, step, amount) {\n    const promises = [];\n\n    for (let i = 1; i <= amount; i++) {\n      const delay = firstDelay + (i - 1) * step;\n\n      const promise = createPromise(i, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n\n      promises.push(promise);\n    }\n\n    return Promise.all(promises);\n  }\n});\n"],"names":["$6JpON","parcelRequire","document","addEventListener","form","querySelector","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","concat","failure","event","preventDefault","formElements","target","elements","firstDelay","parseInt","value","step","amount","createButton","hasAttribute","disabled","promises","i","promise","then","param","console","log","catch","push","all","createPromises","finally","reset"],"version":3,"file":"03-promises.9f2bd1e3.js.map"}